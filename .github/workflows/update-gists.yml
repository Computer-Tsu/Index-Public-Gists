name: Update Public Gists Index

on:
  schedule:
    - cron: '0 0 * * 0' # Weekly schedule (Sunday at midnight)
  workflow_dispatch: # Manual trigger

jobs:
  update-public-gists:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set Up GitHub CLI
      run: |
        sudo apt-get update
        sudo apt-get install -y gh

    - name: Authenticate GitHub CLI
      env:
        PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
      run: gh auth login --with-token <<< "${PERSONAL_ACCESS_TOKEN}"

    - name: Fetch Public Gists
      run: |
        set -x # Enable command echoing
        gh gist list --public --limit 999 > gists.txt
        cat gists.txt
        echo "# Public Gists Index" > new_readme.md
        echo "| Description | Number of Files | Modified Date |" >> new_readme.md
        echo "|-------------|-----------------| ------------- |" >> new_readme.md
        while IFS= read -r -d '' line; do
          echo "Processing line: $line" # Debug line
          echo "$line" | awk '{print $1}'
          echo "$line" | awk '{print $2}'
          echo "$line" | awk '{print $3}'
          echo "$line" | awk '{print $4}'
          echo "$line" | awk '{print $5}'
          gist_id=$(echo "$line" | awk '{print $1}')
          # Matches lines with a 32-character alphanumeric ID followed by
          # 32-character alphanumeric ID at the beginning of the line
          # one or more spaces.
          # (.+) Captures the text we want to extract.
          # replace pipe with dash to not disrupt markdown table with special char in some names
          gist_description=$(echo "$line" | sed -n -E 's/^[a-zA-Z0-9]{32} +(.+) [0-9]+ +(file|files) +public$/\1/p' | sed 's/|/-/g')
          echo "$line" | sed -n -E 's/^[a-fA-F0-9]{32} +(.+) [0-9]+ +(file|files) +public$/\1/p'
          gist_files=$(echo "$line" | sed -E 's/.*\|\s*([^|]+)\s*\|.*/\1/')
          gist_date=$(echo "$line" | sed -E 's/.*\s([0-9]{4}-[0-9]{2}-[0-9]{2}).*/\1/') # Extract the date
          echo "| [${gist_description}](https://gist.github.com/$gist_id) | $gist_files | $gist_date |" >> new_readme.md
        done < <(tr '\n' '\0' < gists.txt)
        # cat gists.txt
        # cat new_readme.md

    - name: Compare README Files
      id: compare
      run: |
        cat README.md
        echo ------- Now list new file
        cat new_readme.md
        if cmp -s README.md new_readme.md; then
          echo "No changes detected."
          echo "update_needed=false" >> $GITHUB_ENV
        else
          echo "Changes detected."
          mv new_readme.md README.md
          echo "update_needed=true" >> $GITHUB_ENV
        fi

    - name: Commit and Push Changes
      if: env.update_needed == 'true'
      run: |
        git config --global user.name "GitHub Action"
        git config --global user.email "action@github.com"
        git add README.md
        git commit -m "Update Public Gists Index"
        git push
